{"version":3,"file":"general-Modal-Modal-stories.efe06635.iframe.bundle.js","mappings":";;;;;;;;;;AAmCA;AAeA;AAKA","sources":["webpack://universal-ui-react/./lib/general/Modal/Modal.tsx"],"sourcesContent":["import { FC, MouseEvent, HTMLAttributes, CSSProperties } from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport Portal from '../Container/Portal';\nimport { FontSize, Padding, ModalVariant } from '../../config/constants';\nimport { ThemeType, getDefaultThemeIfNotFound } from '../../theme/theme';\n\n// Modal Backdrop\nconst ModalBackdrop = styled.div<HTMLAttributes<HTMLDivElement> & { show: boolean }>(({ show, style })=>{\n\treturn {\n\t\tposition: \"fixed\",\n\t\tzIndex: 100,\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tbackgroundColor: \"rgb(32,32,32,0.75)\",\n\t\tdisplay: show ? \"flex\" : \"none\",\n\t\t...style\n\t}\n})\n\n// Modal Container\nconst drop = keyframes`\n    0%{\n        opacity: 0;\n        transform: scale(0);\n    }\n    70%{ transform: scale(1.1);}\n    100%{\n        transform: scale(1);\n        opacity: 1;\n    }\n`\nconst ModalContainer = styled.div(({style})=>{\n\treturn {\n\t\tzIndex: 101,\n\t\tbackgroundColor: \"#fff\",\n\t\tmargin: \"0 auto\",\n\t\theight: \"fit-content\",\n\t\twidth: \"fit-content\",\n\t\tminWidth: \"275px\",\n\t\tmaxWidth: \"90%\",\n\t\toverflow: \"auto\",\n\t\tborderRadius: \"8px\",\n\t\ttextAlign: \"center\",\n\t\t...style\n\t}\n}, css`\n\tanimation: ${drop} .6s ease-in forwards;\n`);\n\n\n// Modal Header\nconst ModalHeader = styled.div(({style}) => {\n\treturn {\n\t\twidth: \"100%\",\n\t\tminHeight: \"24px\",\n\t\tmaxHeight: `calc(${FontSize.ModalTitle} + 1.25em)`,\n\t\tdisplay: \"block\",\n\t\tposition: \"relative\",\n\t\tbackgroundColor: \"inherit\",\n\t\tboxShadow: \"inset 0em 0em 0em 10em rgba(0, 0, 0, 0.3)\",\n\t\tuserSelect: \"none\",\n\t\t...style\n\t};\n});\n\n// Modal Title\nconst ModalTitle = styled.p(({style}) => {\n\treturn {\n\t\tfontSize: FontSize.ModalTitle,\n\t\ttextAlign: \"center\",\n\t\tdisplay: \"inline-block\",\n\t\tmargin: \"0.25em 0\",\n\t\t...style\n\t};\n});\n\n// Modal Close\nconst ModalClose = styled.span(({style}) => {\n\treturn {\n\t\tfontSize: FontSize.ModalTitle,\n\t\twidth: FontSize.ModalTitle,\n\t\theight: FontSize.ModalTitle,\n\t\tposition: \"absolute\",\n\t\tright: \"0.375em\",\n\t\ttop: \"0.25em\",\n\t\tcursor: \"pointer\",\n\t\t...style\n\t};\n});\n\n// Modal Body\nconst ModalBody = styled.div(({style}) => {\n\treturn {\n\t\tminHeight: \"50px\",\n\t\tmaxHeight: \"800px\",\n\t\tcolor: \"inherit\",\n\t\tfontSize: FontSize.ModalText,\n\t\tpadding: Padding.Container,\n\t\tfilter: \"brightness(75%)\",\n\t\t...style\n\t};\n});\n\n// Modal\ntype ModalProps = HTMLAttributes<HTMLDivElement> & {\n\ttheme?: ThemeType;\n\tshow: boolean;\n\tsetShow: (_s: boolean) => void;\n\ttitle?: string;\n\tcontainerStyle?: CSSProperties;\n\theaderStyle?: CSSProperties;\n\ttitleStyle?: CSSProperties;\n\tbodyStyle?: CSSProperties;\n\tenableBackgroundClick?: boolean;\n\tvariant?: ModalVariant;\n};\nconst Modal: FC<ModalProps> = ({\n\ttheme,\n\tchildren, show, setShow, title,\n\tcontainerStyle, headerStyle, titleStyle, bodyStyle,\n\tenableBackgroundClick=true,variant=\"info\",\n\t...rest\n}) => {\n\ttheme = getDefaultThemeIfNotFound(theme);\n\n\tconst ContainerStyle = theme && {\n\t\tbackgroundColor: theme.block,\n\t\tcolor: theme.text,\n\t\t...containerStyle\n\t} || containerStyle;\n\tconst HeaderStyle = theme && {\n\t\tcolor: theme.button.text,\n\t\tbackgroundColor: theme[variant as keyof ThemeType],\n\t\t...headerStyle\n\t} || headerStyle;\n\tconst TitleStyle = theme && {\n\t\t...titleStyle\n\t} || titleStyle;\n\tconst BodyStyle = theme && {\n\t\t...bodyStyle\n\t} || bodyStyle;\n\n\treturn (<Portal {...rest} >\n\t\t<ModalBackdrop show={show} onClick={() => {\n\t\t\t\tif(enableBackgroundClick){\n\t\t\t\t\tsetShow(false);\n\t\t\t\t}\n\t\t\t}}>\n\t\t\t<ModalContainer hidden={!show} onClick={(e: MouseEvent<HTMLElement>)=>e.stopPropagation()} style={ContainerStyle}>\n\t\t\t\t<ModalHeader style={HeaderStyle}>\n\t\t\t\t\t<ModalTitle style={TitleStyle}>{title}</ModalTitle>\n\t\t\t\t\t<ModalClose onClick={()=>setShow(false)}>&#10005;</ModalClose>\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody style={BodyStyle}>\n\t\t\t\t\t{children}\n\t\t\t\t</ModalBody>\n\t\t\t</ModalContainer>\n\t\t</ModalBackdrop>\n\t</Portal>);\n};\nexport default Modal;\n"],"names":[],"sourceRoot":""}