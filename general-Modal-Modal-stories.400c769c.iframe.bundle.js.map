{"version":3,"file":"general-Modal-Modal-stories.400c769c.iframe.bundle.js","mappings":";;;;;;;;;;AAmCA;AAeA;AAKA;;;;;;;;;;;ACzCA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA","sources":["webpack://universal-ui-react/./lib/general/Modal/Modal.tsx","webpack://universal-ui-react/./lib/theme/GlobalStyle.tsx","webpack://universal-ui-react/./node_modules/@storybook/addon-themes/dist/index.mjs"],"sourcesContent":["import { FC, HTMLAttributes, CSSProperties } from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport Portal from '../Container/Portal';\nimport { FontSize, Padding, ModalVariant } from '../../config/constants';\nimport { ThemeType, getDefaultThemeIfNotFound } from '../../theme/theme';\n\n// Modal Backdrop\nconst ModalBackdrop = styled.div<HTMLAttributes<HTMLDivElement> & { show: boolean }>(({ show, style })=>{\n\treturn {\n\t\tposition: \"fixed\",\n\t\tzIndex: 100,\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tbackgroundColor: \"rgb(32,32,32,0.75)\",\n\t\tdisplay: show ? \"flex\" : \"none\",\n\t\t...style\n\t}\n})\n\n// Modal Container\nconst drop = keyframes`\n    0%{\n        opacity: 0;\n        transform: scale(0);\n    }\n    70%{ transform: scale(1.1);}\n    100%{\n        transform: scale(1);\n        opacity: 1;\n    }\n`\nconst ModalContainer = styled.div(({style})=>{\n\treturn {\n\t\tzIndex: 101,\n\t\tbackgroundColor: \"#fff\",\n\t\tmargin: \"0 auto\",\n\t\theight: \"fit-content\",\n\t\twidth: \"fit-content\",\n\t\tminWidth: \"275px\",\n\t\tmaxWidth: \"90%\",\n\t\toverflow: \"auto\",\n\t\tborderRadius: \"8px\",\n\t\ttextAlign: \"center\",\n\t\t...style\n\t}\n}, css`\n\tanimation: ${drop} .6s ease-in forwards;\n`);\n\n\n// Modal Header\nconst ModalHeader = styled.div(({style}) => {\n\treturn {\n\t\twidth: \"100%\",\n\t\tminHeight: \"24px\",\n\t\tmaxHeight: `calc(${FontSize.ModalTitle} + 1.25em)`,\n\t\tdisplay: \"block\",\n\t\tposition: \"relative\",\n\t\tbackgroundColor: \"inherit\",\n\t\tboxShadow: \"inset 0em 0em 0em 10em rgba(0, 0, 0, 0.3)\",\n\t\tuserSelect: \"none\",\n\t\t...style\n\t};\n});\n\n// Modal Title\nconst ModalTitle = styled.p(({style}) => {\n\treturn {\n\t\tfontSize: FontSize.ModalTitle,\n\t\ttextAlign: \"center\",\n\t\tdisplay: \"inline-block\",\n\t\tmargin: \"0.25em 0\",\n\t\t...style\n\t};\n});\n\n// Modal Close\nconst ModalClose = styled.span(({style}) => {\n\treturn {\n\t\tfontSize: FontSize.ModalTitle,\n\t\twidth: FontSize.ModalTitle,\n\t\theight: FontSize.ModalTitle,\n\t\tposition: \"absolute\",\n\t\tright: 0,\n\t\ttop: \"0.25em\",\n\t\tcursor: \"pointer\",\n\t\t...style\n\t};\n});\n\n// Modal Body\nconst ModalBody = styled.div(({style}) => {\n\treturn {\n\t\tminHeight: \"50px\",\n\t\tmaxHeight: \"800px\",\n\t\tcolor: \"inherit\",\n\t\tfontSize: FontSize.ModalText,\n\t\tpadding: Padding.Container,\n\t\tfilter: \"brightness(75%)\",\n\t\t...style\n\t};\n});\n\n// Modal\ntype ModalProps = HTMLAttributes<HTMLDivElement> & {\n\ttheme?: ThemeType;\n\tshow: boolean;\n\tsetShow: (_s: boolean) => void;\n\ttitle?: string;\n\tcontainerStyle?: CSSProperties;\n\theaderStyle?: CSSProperties;\n\ttitleStyle?: CSSProperties;\n\tbodyStyle?: CSSProperties;\n\tenableBackgroundClick?: boolean;\n\tvariant?: ModalVariant;\n};\nconst Modal: FC<ModalProps> = ({\n\ttheme,\n\tchildren, show, setShow, title,\n\tcontainerStyle, headerStyle, titleStyle, bodyStyle,\n\tenableBackgroundClick=true,variant=\"info\",\n\t...rest\n}) => {\n\ttheme = getDefaultThemeIfNotFound(theme);\n\n\tconst ContainerStyle = theme && {\n\t\tbackgroundColor: theme.block,\n\t\tcolor: theme.text,\n\t\t...containerStyle\n\t} || containerStyle;\n\tconst HeaderStyle = theme && {\n\t\tcolor: theme.button.text,\n\t\tbackgroundColor: theme[variant],\n\t\t...headerStyle\n\t} || headerStyle;\n\tconst TitleStyle = theme && {\n\t\t...titleStyle\n\t} || titleStyle;\n\tconst BodyStyle = theme && {\n\t\t...bodyStyle\n\t} || bodyStyle;\n\n\treturn (<Portal {...rest} >\n\t\t<ModalBackdrop show={show} onClick={() => {\n\t\t\t\tif(enableBackgroundClick){\n\t\t\t\t\tsetShow(false);\n\t\t\t\t}\n\t\t\t}}>\n\t\t\t<ModalContainer hidden={!show} onClick={e=>e.stopPropagation()} style={ContainerStyle}>\n\t\t\t\t<ModalHeader style={HeaderStyle}>\n\t\t\t\t\t<ModalTitle style={TitleStyle}>{title}</ModalTitle>\n\t\t\t\t\t<ModalClose onClick={()=>setShow(false)}>&#10005;</ModalClose>\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody style={BodyStyle}>\n\t\t\t\t\t{children}\n\t\t\t\t</ModalBody>\n\t\t\t</ModalContainer>\n\t\t</ModalBackdrop>\n\t</Portal>);\n};\nexport default Modal;\n","import { createGlobalStyle } from \"styled-components\";\nimport { FontSize } from \"../config/constants\";\n\nconst GlobalStyle = createGlobalStyle`\n\t/* Basic DOM */\n\t* {\n\t\tbox-sizing: border-box;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\thtml, body { padding: 0;\n\t\tmargin: 0;\n\t\theight: 100%;\n\t\tfont-family: Arial, Helvetica, sans-serif;\n\t\tfont-size: ${FontSize.Text};\n\t\tcolor: ${props => props.theme.text};\n\t\tbackground-color: ${props => props.theme.background};\n\t}\n\tbutton {\n\t\tborder: none;\n\t\toutline; none;\n\t\tcursor:pointer;\n\t-webkit-touch-callout: none; /* iOS Safari */\n\t-webkit-user-select: none; /* Safari */\n\t  -khtml-user-select: none; /* Konqueror HTML */\n\t\t-moz-user-select: none; /* Old versions of Firefox */\n\t\t-ms-user-select: none; /* Internet Explorer/Edge */\n\t\t\tuser-select: none; /* Non-prefixed version, currently\n\t\t\t\t\t\t\t\t  supported by Chrome, Edge, Opera and Firefox */\n\t}\n\ta {\n\t\tcolor: inherit;\n\t\ttext-decoration: none;\n\t}\n\n\t/* Scroll */\n\t::-webkit-scrollbar {\n\t\twidth: 6px;\n\t}\n\n\t/* Track */\n\t::-webkit-scrollbar-track {\n\t\t-webkit-box-shadow: inset 0 0 6px rgba(241,241,241, 0.3);\n\t\t-webkit-border-radius: 10px;\n\t\tborder-radius: 10px;\n\t}\n\n\t/* Handle */\n\t::-webkit-scrollbar-thumb {\n\t\t-webkit-border-radius: 10px;\n\t\tborder-radius: 10px;\n\t\tbackground: rgba(85, 85, 85, 0.8);\n\t\t-webkit-box-shadow: inset 0 0 6px rgba(136, 136, 136, 0.5);\n\t}\n\t::-webkit-scrollbar-thumb:window-inactive {\n\t\tbackground: rgba(85, 85, 85, 0.4);\n\t}\n\n\t.no-select {\n\t-webkit-touch-callout: none; /* iOS Safari */\n\t-webkit-user-select: none; /* Safari */\n\t  -khtml-user-select: none; /* Konqueror HTML */\n\t\t-moz-user-select: none; /* Old versions of Firefox */\n\t\t-ms-user-select: none; /* Internet Explorer/Edge */\n\t\t\tuser-select: none; /* Non-prefixed version, currently\n\t\t\t\t\t\t\t\t  supported by Chrome, Edge, Opera and Firefox */\n\t}\n\n`;\n\nexport default GlobalStyle;\n","import { useParameter, addons, useEffect, useMemo, definePreview } from 'storybook/internal/preview-api';\nimport { deprecate } from 'storybook/internal/client-logger';\nimport dedent from 'ts-dedent';\nimport React from 'react';\n\nvar __defProp=Object.defineProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0});};var preview_exports={};__export(preview_exports,{initialGlobals:()=>initialGlobals});var PARAM_KEY=\"themes\",ADDON_ID=`storybook/${PARAM_KEY}`,GLOBAL_KEY=\"theme\";var DEFAULT_THEME_PARAMETERS={},THEMING_EVENTS={REGISTER_THEMES:`${ADDON_ID}/REGISTER_THEMES`};var initialGlobals={[GLOBAL_KEY]:\"\"};var helpers_exports={};__export(helpers_exports,{initializeThemeState:()=>initializeThemeState,pluckThemeFromContext:()=>pluckThemeFromContext,useThemeParameters:()=>useThemeParameters});function pluckThemeFromContext({globals}){return globals[GLOBAL_KEY]||\"\"}function useThemeParameters(context){return deprecate(dedent`The useThemeParameters function is deprecated. Please access parameters via the context directly instead e.g.\n    - const { themeOverride } = context.parameters.themes ?? {};\n    `),context?context.parameters[PARAM_KEY]??DEFAULT_THEME_PARAMETERS:useParameter(PARAM_KEY,DEFAULT_THEME_PARAMETERS)}function initializeThemeState(themeNames,defaultTheme){addons.getChannel().emit(THEMING_EVENTS.REGISTER_THEMES,{defaultTheme,themes:themeNames});}var DEFAULT_ELEMENT_SELECTOR=\"html\",classStringToArray=classString=>classString.split(\" \").filter(Boolean),withThemeByClassName=({themes,defaultTheme,parentSelector=DEFAULT_ELEMENT_SELECTOR})=>(initializeThemeState(Object.keys(themes),defaultTheme),(storyFn,context)=>{let{themeOverride}=context.parameters[PARAM_KEY]??{},selected=pluckThemeFromContext(context);return useEffect(()=>{let selectedThemeName=themeOverride||selected||defaultTheme,parentElement=document.querySelector(parentSelector);if(!parentElement)return;Object.entries(themes).filter(([themeName])=>themeName!==selectedThemeName).forEach(([themeName,className])=>{let classes=classStringToArray(className);classes.length>0&&parentElement.classList.remove(...classes);});let newThemeClasses=classStringToArray(themes[selectedThemeName]);newThemeClasses.length>0&&parentElement.classList.add(...newThemeClasses);},[themeOverride,selected]),storyFn()});var DEFAULT_ELEMENT_SELECTOR2=\"html\",DEFAULT_DATA_ATTRIBUTE=\"data-theme\",withThemeByDataAttribute=({themes,defaultTheme,parentSelector=DEFAULT_ELEMENT_SELECTOR2,attributeName=DEFAULT_DATA_ATTRIBUTE})=>(initializeThemeState(Object.keys(themes),defaultTheme),(storyFn,context)=>{let{themeOverride}=context.parameters[PARAM_KEY]??{},selected=pluckThemeFromContext(context);return useEffect(()=>{let parentElement=document.querySelector(parentSelector),themeKey=themeOverride||selected||defaultTheme;parentElement&&parentElement.setAttribute(attributeName,themes[themeKey]);},[themeOverride,selected]),storyFn()});var pluckThemeFromKeyPairTuple=([_,themeConfig])=>themeConfig,withThemeFromJSXProvider=({Provider,GlobalStyles,defaultTheme,themes={}})=>{let themeNames=Object.keys(themes),initialTheme=defaultTheme||themeNames[0];return initializeThemeState(themeNames,initialTheme),(storyFn,context)=>{let{themeOverride}=context.parameters[PARAM_KEY]??{},selected=pluckThemeFromContext(context),theme=useMemo(()=>{let selectedThemeName=themeOverride||selected||initialTheme,pairs=Object.entries(themes);return pairs.length===1?pluckThemeFromKeyPairTuple(pairs[0]):themes[selectedThemeName]},[selected,themeOverride]);return Provider?React.createElement(Provider,{theme},GlobalStyles&&React.createElement(GlobalStyles,null),storyFn()):React.createElement(React.Fragment,null,GlobalStyles&&React.createElement(GlobalStyles,null),storyFn())}};var index_default=()=>definePreview(preview_exports);\n\nexport { helpers_exports as DecoratorHelpers, index_default as default, withThemeByClassName, withThemeByDataAttribute, withThemeFromJSXProvider };\n"],"names":[],"sourceRoot":""}